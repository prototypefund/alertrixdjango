from django.contrib import messages
from django.contrib.auth.mixins import PermissionRequiredMixin
from django.contrib.auth.models import Group
from django.urls import reverse
from django.utils.translation import gettext_lazy as _
from django.views.generic import CreateView
from .. import forms
from .. import mixins
from .. import models


class CreateCompany(
    PermissionRequiredMixin,
    mixins.ContextActionsMixin,
    CreateView,
):
    permission_required = 'alertrix.add_company'
    model = models.Company
    form_class = forms.company.CompanyForm
    template_name = 'alertrix/form.html'
    http_method_names = [
        'get',
        'post',
    ]
    context_actions = [
        {'name': 'comp.list', 'label': _('list')},
    ]

    def get_form_kwargs(self):
        kwargs = {
            'user': self.request.user,
            **super().get_form_kwargs(),
        }
        return kwargs

    def get_success_url(self):
        return reverse('comp.detail', kwargs={'slug': self.object.slug})

    def form_invalid(self, form):
        """
        Return a form response that has all the previous inputs in it (as per default), but also all the
        autogenerated content.
        """
        form.full_clean()
        new_form = self.get_form_class()(
            user=self.request.user,
        )
        new_form._errors = form._errors
        return self.render_to_response(self.get_context_data(form=new_form))
